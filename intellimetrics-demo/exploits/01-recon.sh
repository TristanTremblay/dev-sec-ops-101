#!/bin/bash

# IntelliMetrics CTF - Phase 1: Reconnaissance
# Course Topic: Cours 11 - Planification des tests / Tests d'intrusion  Externe
# This script demonstrates the reconnaissance phase of a penetration test

TARGET=${1:-localhost}
PORTS="22,80,8080,8081,8082,27017,4321"

echo "================================================"
echo "  IntelliMetrics CTF - Phase 1: RECONNAISSANCE"
echo "================================================"
echo ""
echo "Target: $TARGET"
echo "Scope: External penetration testing"
echo ""

# Step 1: Host Discovery
echo "[+] Step 1: Host Discovery (nmap ping scan)"
echo "--------------------------------------------"
nmap -sn $TARGET
echo ""

# Step 2: Port Scanning
echo "[+] Step 2: Port Scanning"
echo "--------------------------------------------"
echo "Scanning common ports: $PORTS"
nmap -p $PORTS -sV -sC $TARGET -oN recon_scan.txt
echo ""
echo "Results saved to: recon_scan.txt"
echo ""

# Step 3: Service Enumeration
echo "[+] Step 3: Service Enumeration"
echo "--------------------------------------------"
echo ""

echo "Testing HTTP services..."
for port in 80 4321 8080 8081 8082; do
    echo "  ’ Checking http://$TARGET:$port/"
    curl -s -o /dev/null -w "    Status: %{http_code}\n" http://$TARGET:$port/ 2>/dev/null || echo "    Not responding"
done
echo ""

# Step 4: Web Application Discovery
echo "[+] Step 4: Web Application Discovery"
echo "--------------------------------------------"
echo ""

echo "API Gateway (8080) endpoints:"
curl -s http://$TARGET:8080/health | jq '.' 2>/dev/null || echo "  Service not available"
echo ""

echo "Checking for common admin endpoints:"
for endpoint in "/api/admin/config" "/api/admin/debug" "/api/admin/system"; do
    echo "  Testing: http://$TARGET:8080$endpoint"
    status=$(curl -s -o /dev/null -w "%{http_code}" http://$TARGET:8080$endpoint 2>/dev/null)
    echo "    Status: $status"
done
echo ""

echo "Auth Service (8081) endpoints:"
curl -s http://$TARGET:8081/api/auth/users | jq '.' 2>/dev/null || echo "  Service not available"
echo ""

echo "File Service (8082) endpoints:"
curl -s http://$TARGET:8082/api/files/list | jq '.' 2>/dev/null || echo "  Service not available"
echo ""

# Step 5: Technology Fingerprinting
echo "[+] Step 5: Technology Fingerprinting"
echo "--------------------------------------------"
echo ""

echo "Detecting technologies..."
curl -s -I http://$TARGET:8080/health | grep -E "Server|X-Powered-By|Content-Type"
echo ""

# Step 6: MongoDB Service Check
echo "[+] Step 6: Database Service Check"
echo "--------------------------------------------"
echo ""

echo "Checking if MongoDB (27017) is exposed:"
nc -zv $TARGET 27017 2>&1 | grep succeeded && echo "     WARNING: MongoDB is publicly accessible!" || echo "  MongoDB port closed"
echo ""

# Step 7: SSH Service Check
echo "[+] Step 7: SSH Service Check"
echo "--------------------------------------------"
echo ""

echo "Checking SSH service (22):"
nc -zv $TARGET 22 2>&1 | grep succeeded && echo "  SSH service available - potential for password spraying" || echo "  SSH port closed"
echo ""

# Summary
echo "================================================"
echo "  RECONNAISSANCE SUMMARY"
echo "================================================"
echo ""
echo "Discovered Services:"
echo "  " Frontend (4321) - Astro Application"
echo "  " API Gateway (8080) - Go/Gin Backend"
echo "  " Auth Service (8081) - Authentication API"
echo "  " File Service (8082) - File Management API"
echo "  " MongoDB (27017) - Database"
echo "  " SSH (22) - Remote Access"
echo ""
echo "Potential Vulnerabilities Identified:"
echo "  " Unauthenticated admin endpoints"
echo "  " Exposed database port"
echo "  " Debug endpoints accessible"
echo "  " SSH service available for brute force"
echo ""
echo "Next Steps:"
echo "  Run: ./02-enumerate.sh $TARGET"
echo ""
